// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  role          UserRole  @default(DONOR)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  donations     Donation[]
  volunteer     Volunteer?
  profile       Profile?
}

model Profile {
  id          String    @id @default(cuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  phone       String?
  address     String?
  bio         String?
  avatar      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Donation {
  id          String    @id @default(cuid())
  amount      Float
  currency    String    @default("USD")
  status      DonationStatus @default(PENDING)
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  campaignId  String?
  campaign    Campaign? @relation(fields: [campaignId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Campaign {
  id          String    @id @default(cuid())
  title       String
  description String
  goal        Float
  current     Float     @default(0)
  startDate   DateTime
  endDate     DateTime?
  status      CampaignStatus @default(ACTIVE)
  image       String?
  donations   Donation[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Event {
  id          String    @id @default(cuid())
  title       String
  description String
  date        DateTime
  location    String
  capacity    Int?
  image       String?
  status      EventStatus @default(UPCOMING)
  volunteers  Volunteer[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Volunteer {
  id          String    @id @default(cuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  events      Event[]
  skills      String[]
  availability String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model BlogPost {
  id          String    @id @default(cuid())
  title       String
  content     String
  slug        String    @unique
  image       String?
  published   Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Contact {
  id          String    @id @default(cuid())
  name        String
  email       String
  subject     String
  message     String
  status      ContactStatus @default(NEW)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum UserRole {
  ADMIN
  DONOR
  VOLUNTEER
}

enum DonationStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum CampaignStatus {
  DRAFT
  ACTIVE
  COMPLETED
  CANCELLED
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
  CANCELLED
}

enum ContactStatus {
  NEW
  READ
  REPLIED
  ARCHIVED
}
